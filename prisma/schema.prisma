generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum for user roles
enum UserRole {
  SUPER_ADMIN
  ADMIN
  TEAM_MEMBER
}

// Enum for frequency of tasks
enum Frequency {
  D // Daily
  W // Weekly
  M // Monthly
  Y // Yearly
  Q // Quarterly
  F // Fortnightly
  E1ST // First occurrence in a cycle
  E2ND // Second occurrence in a cycle
  E3RD // Third occurrence in a cycle
  ELAST // Last occurrence in a cycle
}

// Enum for departments
enum Department {
  ACCOUNTS
  MDO
  S_T
  PM
  MD
  MANAGER_HO
  COORDINATOR_HO
  OHE
  MARKETING_TENDER
  HR
  CA
  BILLING_ENGINEER
  SURVEYER_DEPARTMENT
  OTHERS
  OFFICE_EXECUTIVES
  PURCHASE
  QC_ENGINEER
}

model User {
  id                 String   @id @default(uuid())
  name               String
  username           String   @unique
  email              String   @unique
  phoneNumber        String?  @map("phone_number")
  password           String
  role               UserRole @default(TEAM_MEMBER)
  isActive           Boolean  @default(true) @map("is_active")
  forcePasswordReset Boolean  @default(false)
  avatarUrl          String?  @map("avatar_url")
  avatarPublicId     String?  @map("avatar_public_id")
  refreshToken       String?
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")

  // Relation fields
  tasks Task[] // One user can have many tasks

  @@map("users")
}

model Task {
  id         Int        @id @default(autoincrement())
  taskCode   String
  name       String
  freq       Frequency // Frequency of the task
  department Department // Department responsible for the task
  planned    DateTime   @db.Date // Planned completion date
  actual     DateTime?  @db.Date // Actual completion date
  status     Boolean    @default(false) // Task completion status
  doerEmail  String // Email of the user the task is assigned to
  doerName   String
  assignedBy String // Email of the user who assigned the task
  updatedBy  String // Email of the last updater
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  User       User[]

  @@map("tasks")
}
